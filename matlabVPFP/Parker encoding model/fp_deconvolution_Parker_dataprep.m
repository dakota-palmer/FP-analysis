%data prep for Parker encoding model (not from Parker, made for Richard lab data)

% First, save data into appropriate format/shape
% Input folder should have a .mat file of every recording that includes an
% 'output' and 'g_output' structure. The 'output' struct contains both the
% time of various task events (in seconds) as well as the choice or outcome
% identities of individual trials (e.g. output.IpsiPress is either 1 for an
% ipsi press or -1 for a contra press). 'The 'g_output' structure contains
% the recorded GCaMP trace (g_output.gcamp) as well as the sampling rate
% (g_output.samp_rate)

%let's load a .mat containing preanalyzed FP data generated by our
%fpAnalyzeData.m
load(uigetfile('*.mat')); %choose the subjDataAnalyzed.mat file to open for your experiment %by default only show .mat files

fs= 40; %make sure the sampling frequency is correct!
savePath= strcat(pwd,'\data_to_input\');

subjects= fieldnames(subjDataAnalyzed);

%% Exclude data
for subj= 1:numel(subjects)
    currentSubj= subjDataAnalyzed.(subjects{subj});
    excludedSessions= [];
    for session= 1:numel(currentSubj)
        if currentSubj(session).trainStage ~= 7 %only include stage 7 days
           excludedSessions= cat(2,excludedSessions,session);
        end
    end%end session loop
   subjDataAnalyzed.(subjects{subj})(excludedSessions)= []; 
   
   currentSubj= subjDataAnalyzed.(subjects{subj});
   excludedSessions= [];
   for session= 1:numel(currentSubj) %loop through again and get rid of all except final stage 7 day
       if session<numel(currentSubj)
           excludedSessions= cat(2,excludedSessions,session);
       end
   end%end session loop 2
   
   subjDataAnalyzed.(subjects{subj})(excludedSessions)= []; 
   
end %end subj loop

%% Visualize photometry data
% for subj= 1:numel(subjects) %for each subject
%     
%     currentSubj= subjDataAnalyzed.(subjects{subj}); %use this for easy indexing into the current subject within the struct
%     
%     disp(strcat('plotting photometry data for_', subjects{subj}));
%            
%    for session = 1:numel(subjDataAnalyzed.(subjects{subj})) %for each training session this subject completed
%        
%        
%         figure() %one figure per SESSION       
%        
%        currentSubj= subjDataAnalyzed.(subjects{subj}); %use this for easy indexing into the curret subject within the struct
%       
%        %  session plots- within subject
%        
% %        fitPurple= controlFit(currentSubj(session).raw.reblue, currentSubj(session).raw.repurple);
% 
%        
%         hold on;
%         plot(currentSubj(session).raw.cutTime, currentSubj(session).raw.reblue, 'b'); %plot 465nm trace
%         plot(currentSubj(session).raw.cutTime, currentSubj(session).raw.repurple,'m'); %plot 405nm trace
%         title(strcat('Rat #',num2str(currentSubj(session).rat),' training day :', num2str(currentSubj(session).trainDay), ' downsampled ', ' box ', num2str(currentSubj(session).box)));
%         xlabel('time (s)');
%         ylabel('mV');
%         legend('blue (465)',' purple (405)');
%         
%         
%          %make figure full screen, save, and close this figure
%         set(gcf,'Position', get(0, 'Screensize')); %make the figure full screen before saving
% %         close; %close
%    end  
%     
% end


%% loop through each session and save a .mat of events & photometry data
%the .mat will contain 'output' and 'g_output' structs
for subj= 1:numel(subjects)
   currentSubj= subjDataAnalyzed.(subjects{subj}); %save for easy indexing
   
   
   for session= 1:numel(currentSubj)
   
       %Clear structs between sessions
       output= [];
       g_output= [];
       metadata= [];
       
       
       experimentName= currentSubj(session).experiment;
       
       %save metadata field for easy recovery of other analyzed data from this subj & session
       metadata.subject= subjects(subj);
       metadata.date= currentSubj(session).date;

       %fill output struct with task event timestamps
       output.DS= currentSubj(session).periDS.DS;
       output.NS= currentSubj(session).periNS.NS;

       %        output.poxDS= currentSubj(session).behavior.poxDS; %note this would be ALL PEs during cue (not just first)

       %to get only first lox & pox during cue, using cellfun
       index= ~cellfun('isempty',currentSubj(session).behavior.poxDS); %using this index accounts for empty cells
       output.firstPoxDS(index)= cellfun(@(v)v(1),currentSubj(session).behavior.poxDS(index));
       output.firstPoxDS(output.firstPoxDS==0)=nan; %replace 0s with nan
       
       index= ~cellfun('isempty',currentSubj(session).behavior.loxDS); %using this index accounts for empty cells
       output.firstLoxDS(index)= cellfun(@(v)v(1),currentSubj(session).behavior.loxDS(index));
       output.firstLoxDS(output.firstLoxDS==0)=nan; %replace 0s with nan

       index= ~cellfun('isempty',currentSubj(session).behavior.poxNS); %using this index accounts for empty cells
       output.firstPoxNS(index)= cellfun(@(v)v(1),currentSubj(session).behavior.poxNS(index));
       output.firstPoxNS(output.firstPoxNS==0)=nan; %replace 0s with nan
       
       index= ~cellfun('isempty',currentSubj(session).behavior.loxNS); %using this index accounts for empty cells
       output.firstLoxNS(index)= cellfun(@(v)v(1),currentSubj(session).behavior.loxNS(index));
       output.firstLoxNS(output.firstLoxNS==0)=nan; %replace 0s with nan
       
       
%        output.pox= currentSubj(session).raw.pox;
%        output.lox= currentSubj(session).raw.lox;
%        output.out= currentSubj(session).raw.out;
       
       %fill g_output struct with photometry signal
       g_output.reblue= currentSubj(session).raw.reblue;
       g_output.samp_rate= fs; 
       
       save(strcat(savePath,experimentName,'-',subjects{subj},'-ses-',num2str(currentSubj(session).date),'.mat'), 'g_output', 'output', 'metadata'); %the second argument here is the variable being saved, the first is the filename 
       
   end %end session loop
    
end%end subj loop